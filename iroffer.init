#!/bin/bash
### BEGIN INIT INFO
# Provides:          iroffer
# Required-Start:    $remote_fs $network $syslog $named
# Required-Stop:     $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: iroffer xdcc bot
### END INIT INFO

# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License version 2 for
# more details.
#
# You should have received a copy of the GNU General Public License version 2
# along with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

DAEMON="/usr/local/bin/iroffer"
NAME="$( basename "${BASH_SOURCE[0]}" )"
USER=iroffer
DESC="xdcc bot"
ARGS="-b"

CONFDIR="/etc/$NAME/config"
TELNET_PORT="/etc/$NAME/telnet"
METACONFDIR="/etc/$NAME/"
PIDDIR="/etc/$NAME/pid"

[ -f "$CONFDIR/$NAME.default" ] && . $CONFDIR/$NAME.default

if [[ $CHROOT = "true" ]]; then
  ARGS="$ARGS -t $CHROOT_DIR -u $CHROOT_USER $CHROOT_CONFDIR"
  USER=root
  CONFDIR="${CHROOT_DIR}${CHROOT_CONFDIR}"
else
  ARGS="$ARGS $CONFDIR"
fi

. /lib/lsb/init-functions

if [ ! -e "$PIDDIR" ];then
       mkdir -p "$PIDDIR"
       if [[ $CHROOT = "true" ]]; then
         chown $CHROOT_USER "$PIDDIR"
       else
         chown $USER "$PIDDIR"
       fi
fi

if [ ! -e "$CONFDIR" ];then
       mkdir -p "$CONFDIR"
fi

if [ ! -e "$TELNET_PORT" ];then
       mkdir -p "$TELNET_PORT"
fi

need_root(){
 if [ $UID -ne 0 ]; then
  log_failure_msg "Operation need root rights"
  exit 1
 fi
}

telnet_iroffer(){
  BOTNAME=$1
  if [ -f "$TELNET_PORT/$BOTNAME.port" ]; then
    log_daemon_msg "Starting telnet console for $BOTNAME"
    CMD="nc 127.0.0.1 `cat \"$TELNET_PORT/$BOTNAME.port\"`"
    if which rlwrap >/dev/null; then
      rlwrap --command-name telnet_$BOTNAME $CMD
    else
      $CMD
    fi
  else
    log_failure_msg "File $TELNET_PORT/$BOTNAME.port missing"
  fi
}

genconf_iroffer(){
  BOTNAME=$1
  if [ -f $METACONFDIR/$BOTNAME.py ]; then
    log_daemon_msg "Generating config for $BOTNAME"
    $METACONFDIR/$BOTNAME.py -t "$TELNET_PORT/$BOTNAME.port" > $CONFDIR/$BOTNAME.config
    log_end_msg $?
  else
    log_failure_msg " File $METACONFDIR/$BOTNAME.py missing"
  fi
}

start_iroffer(){
  BOTNAME=$1
  need_root
  # see if stale pid file
  if [ -f $PIDDIR/${BOTNAME}.pid ]; then
    pid=`cat $PIDDIR/${BOTNAME}.pid`
    if [ `ps -p $pid | wc -l` -eq 2 ]; then
      log_failure_msg "$BOTNAME already running"
      return
    else
      log_warning_msg "Stale PID File for $BOTNAME"
    fi
  fi
  if [ "$CHROOT" = "true" ] && [ -n "$CHROOT_EXEC" ]; then
    eval "$CHROOT_EXEC"
  fi
  log_daemon_msg "Starting iroffer $BOTNAME..."
  /bin/su -l $USER -c "$DAEMON $ARGS/$BOTNAME.config"
}

stop_iroffer(){
  BOTNAME=$1
  need_root
  if [ -f $PIDDIR/${BOTNAME}.pid ]; then
    pid=`cat $PIDDIR/${BOTNAME}.pid`
    echo -n " * Stopping $NAME $BOTNAME"
    for i in `seq 30`; do
      echo -n "."
      if [ `ps -p $pid | wc -l` -eq 2 ]; then
        kill $pid
      else
        log_end_msg 0
        return
      fi
      sleep 1
    done
    log_end_msg 1
  else
    log_warning_msg "$PIDDIR/${BOTNAME}.pid no found"
  fi
}

reload_iroffer(){
  BOTNAME=$1
  need_root
  if [ -f $PIDDIR/${BOTNAME}.pid ]; then
    pid=`cat $PIDDIR/${BOTNAME}.pid`
    log_daemon_msg "Reloading config of $BOTNAME"
    kill -n 12 $pid
  else
    log_failure_msg "$PIDDIR/${BOTNAME}.pid no found"
  fi
}

reconnect_iroffer(){
  BOTNAME=$1
  need_root
  if [ -f $PIDDIR/${BOTNAME}.pid ]; then
    pid=`cat $PIDDIR/${BOTNAME}.pid`
    log_daemon_msg "Reconnecting $BOTNAME"
    kill -n 10 $pid
  else
    log_failure_msg "$PIDDIR/${BOTNAME}.pid no found"
  fi
}

start(){
    # make sure filesystem isn't full
    freespace=`df -k . | tail -1 | awk {'print $4'}`
    if [ $freespace -lt 10 ]; then
      log_failure_msg "Filesystem Full!"
      exit
    fi
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        start_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        if test -e $CONFDIR/$BOTNAME.config ; then
            start_iroffer $BOTNAME
        else
          log_failure_msg "$BOTNAME, missing $CONFDIR/$BOTNAME.config"
        fi
      done
    fi
}
stop(){
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        stop_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        if test -e $CONFDIR/$BOTNAME.config ; then
            stop_iroffer $BOTNAME
        else
          log_failure_msg "$BOTNAME, missing $CONFDIR/$BOTNAME.config"
        fi
      done
    fi
}
restart(){
    # make sure filesystem isn't full
    freespace=`df -k . | tail -1 | awk {'print $4'}`
    if [ $freespace -lt 10 ]; then
      log_failure_msg "Filesystem Full!"
      exit
    fi
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        stop_iroffer $BOTNAME
        start_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        if test -e $CONFDIR/$BOTNAME.config ; then
            stop_iroffer $BOTNAME
            start_iroffer $BOTNAME
        else
          log_failure_msg "$BOTNAME, missing $CONFDIR/$BOTNAME.config"
        fi
      done
    fi
}
status(){
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        status_of_proc -p "$PIDDIR/$BOTNAME.pid" "$DAEMON" "$DESC $BOTNAME"
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        status_of_proc -p "$PIDDIR/$BOTNAME.pid" "$DAEMON" "$DESC $BOTNAME"
      done
    fi
}
genconf(){
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        genconf_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        genconf_iroffer $BOTNAME
      done
    fi
}

case $1 in
  start)
    start $@;
  ;;
  stop)
    stop $@
  ;;
  restart)
    restart $@
  ;;
  reload)
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        reload_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        if test -e $CONFDIR/$BOTNAME.config ; then
            reload_iroffer $BOTNAME
        else
          log_failure_msg "$BOTNAME, missing $CONFDIR/$BOTNAME.config"
        fi
      done
    fi
  ;;
  reconnect)
    if test -z "$2" ; then
      for BOT in `cd $CONFDIR; ls *.config 2> /dev/null`; do
        BOTNAME=${BOT%%.config}
        reconnect_iroffer $BOTNAME
      done
    else
      while shift ; do
        [ -z "$1" ] && break
        BOTNAME=$1
        if test -e $CONFDIR/$BOTNAME.config ; then
            reconnect_iroffer $BOTNAME
        else
          log_failure_msg "$BOTNAME, missing $CONFDIR/$BOTNAME.config"
        fi
      done
    fi
  ;;
  status)
    status $@
  ;;
  genconf)
    genconf $@;
  ;;
  telnet)
   telnet_iroffer $2;
  ;;
  *)
  log_failure_msg "Usage: $0 {start|stop|restart|reload|status|reconnect|genconf|telnet} [`cd $CONFDIR; ls -m *.config 2> /dev/null | sed 's/\.config//g;s/, /|/g'`]"
  exit 1
  ;;
esac
